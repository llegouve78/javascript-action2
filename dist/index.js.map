{"version":3,"file":"index.js","mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;;;;;;;;AAAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;;;;ACDA;AACA;AACA;AACA;AACA;AACA","sources":[".././src/main.js","../../../Users/llegouvello/AppData/Roaming/npm/node_modules/@vercel/ncc/dist/ncc/@@notfound.js","../webpack/bootstrap","../webpack/runtime/compat",".././src/index.js"],"sourcesContent":["const core = require('@actions/core')\nconst  github = require(\"@actions/github\")\n/**\n * The main function for the action.\n * @returns {Promise<void>} Resolves when the action is complete.\n */\nasync function run() {\n  try {\n      const token= core.getInput(\"token\")\n      const title = core.getInput(\"title\")\n      const body = core.getInput(\"body\")\n      const assignees = core.getInput(\"assignees\")\n\n      const octokit = github.getOctokit(token)\n\n      const response = await octokit.rest.issues.create({\n        // owner: github.context.repo.owner\n        //\n        ...github.context.repo,\n        title,\n        body,\n        assignees: assignees ? assignees.split('\\n'): undefined,\n      })\n\n      core.setOutput(\"issue\", response.data);\n     } catch (error) {\n    // Fail the workflow run if an error occurs\n    core.setFailed(error.message)\n  }\n}\n\nmodule.exports = {\n  run\n}\n",null,"// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","/**\n * The entrypoint for the action.\n */\nconst { run } = require('./main')\n\nrun()\n"],"names":[],"sourceRoot":""}